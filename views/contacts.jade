extends layout

block action
  button.save-contacts.button-main.button-primary(disabled) Save

block alerts
  if alert
    div(class="alert alert-#{alert.type} alert-dismissible fade in")
      != alert.msg
      button(type="button"
             class="close"
             data-dismiss="alert"
             aria-label="Close")
        span(aria-hidden="true") &times;

block content
  h2= 'Contacts'

  .content
    #batches
      ul
        each batch in batches
          li(class='batch'
             data-id='#{batch.id}'
             data-date-start='#{batch.start_date}'
             data-date-end='#{batch.end_date}')
            h3= batch.name
            <!--input(type='checkbox')-->
            .checkbox-wrapper.squared-one
              input(type="checkbox"
                    value="None"
                    id="people-batch-#{batch.id}"
                    name='people-batch-#{batch.id}'
                    data-id='#{batch.id}')
              label(for="people-batch-#{batch.id}")

            .people

block scripts
  script.
    // Save button @ header
    $('.save-contacts').on('click', function () {
      var checked = $('input[name^="people-batch-"]:checked');

      if (checked.length) {
        // 1. Get the IDs
        // 2. Send them to an endpoint
        var ids = checked.map(function () {
          return $(this).data('id');
        }).toArray().join(',');

        window.location.href = '/contacts/save?ids=' + ids;
      }
    });

    // Toggle checbox just by clicking the batch's title,
    // and enable/disable the Save button, according to inputs.
    $('.batch').on('click', function () {
      var checkBox = $(this).find('input');
      checkBox.prop('checked', !checkBox.prop('checked'));

      var areNoBatchesChecked = !$('.batch').find('input:checked').length;
      $('.save-contacts').prop('disabled', areNoBatchesChecked);
    });

    /**
     * Displays the people in a batch.
     */
    function loadBatch(container, batch) {
      $(container).html(batch);
    };
